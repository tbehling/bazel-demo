load("@bazel_gazelle//:def.bzl", "gazelle")
load("@rules_pkg//:pkg.bzl", "pkg_tar", "pkg_deb")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")

# gazelle:prefix github.com/tbehling/bazel-demo
gazelle(name = "gazelle")

pkg_tar(
    name = "tar-hello-bin",
    strip_prefix = "/cmd/hello/linux_amd64_pure_stripped",
    package_dir = "/usr/bin",
    srcs = ["//cmd/hello"],
    mode = "0755",
)

pkg_tar(
    name = "debian-data",
    extension = "tar.gz",
    deps = [
        ":tar-hello-bin",
    ],
)

pkg_deb(
    name = "hello-debian",
    architecture = "amd64",
    built_using = "bazel",
    data = ":debian-data",
    depends = [
        "glibc",
    ],
    description = "Hello tool",
    maintainer = "Ted <tbehling@github.com>",
    package = "hello",
    version = "0.0.1",
)

container_image(
    name = "hello-docker",
    base = "@debian9//image",
    files = [
        "README.md",
    ],
    tars = [":debian-data"],
    cmd = ["hello"],
)

# same as hello-docker, but it pulls in the Debian package
container_image(
    name = "hello-docker-deb",
    base = "@debian9//image",
    files = [
        "README.md",
    ],
    tars = [],
    debs = [":hello-debian.deb"],
    cmd = ["hello"],
)

container_push(
   name = "push-hello-docker",
   image = ":hello-docker-deb",
   format = "Docker",
   registry = "docker.pkg.github.com",
   repository = "tbehling/bazel-demo/hello",
   tag = "dev-{BUILD_TIMESTAMP}",
)
